{"version":3,"sources":["components/NavBar.js","components/formModal.js","components/searchModal.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","_ref","showFormModalFunction","noteClearanceFunction","showSearchModalFunction","_jsxs","className","children","_jsx","FaPlus","onClick","FaSearch","FaSyncAlt","FormModal","props","Modal","open","noteModalShowStatement","onClose","closeFormModalFunction","classNames","modal","closeIcon","center","onSubmit","noteSubmissionFunction","type","name","placeholder","onChange","noteMainTitleFunction","value","noteMainTitleValue","required","noteSubTitleFunction","noteSubTitleValue","cols","rows","noteDescriptionFunction","noteDescriptionValue","SearchModal","searchModalShowStatement","closeSearchModalFunction","noteSearchFunction","noteSearchQueryFunction","searchQueryValue","Board","notesData","map","noteObj","noteIndex","noteMainTitle","noteSubTitle","noteDescription","App","showFormModal","setShowFormModal","useState","showSearchModal","setShowSearchModal","setNoteMainTitle","setNoteSubTitle","setNoteDescription","notes","setNotes","searchNoteQuery","setSearchNoteQuery","Fragment","openFormModal","openSearchModal","handleClearNotes","closeFormModal","e","target","preventDefault","closeSearchModal","searchedNotes","filter","obj","includes","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAmBeA,MAjBAC,IAIR,IAJS,sBACdC,EAAqB,sBACrBC,EAAqB,wBACrBC,GACDH,EACC,OACEI,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,MAAAD,SAAI,WACJF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAACC,IAAM,CAACH,UAAU,cAAcI,QAASR,IACzCM,cAACG,IAAQ,CAACL,UAAU,cAAcI,QAASN,IAC3CI,cAACI,IAAS,CAACN,UAAU,cAAcI,QAASP,W,cCsCrCU,MAhDIC,GAEfN,cAACO,IAAK,CACJC,KAAMF,EAAMG,uBACZC,QAASJ,EAAMK,uBACfC,WAAY,CACVC,MAAO,2BACPC,UAAW,kBAEbC,QAAM,EAAAhB,SAENF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,qBACJF,eAAA,QAAMmB,SAAUV,EAAMW,uBAAuBlB,SAAA,CAC3CC,cAAA,SACEkB,KAAK,OACLC,KAAK,gBACLC,YAAY,kBACZC,SAAUf,EAAMgB,sBAChBC,MAAOjB,EAAMkB,mBACbC,UAAQ,IAEVzB,cAAA,SACEkB,KAAK,OACLC,KAAK,eACLC,YAAY,iBACZC,SAAUf,EAAMoB,qBAChBH,MAAOjB,EAAMqB,kBACbF,UAAQ,IAEVzB,cAAA,YACEmB,KAAK,kBACLS,KAAK,KACLC,KAAK,KACLT,YAAY,mBACZC,SAAUf,EAAMwB,wBAChBP,MAAOjB,EAAMyB,qBACbN,UAAQ,IAEVzB,cAAA,UAAQkB,KAAK,SAAShB,QAASI,EAAMK,uBAAuBZ,SAAC,wBCRxDiC,MA/BM1B,GAEjBN,cAACO,IAAK,CACJC,KAAMF,EAAM2B,yBACZvB,QAASJ,EAAM4B,yBACftB,WAAY,CACVC,MAAO,oDACPC,UAAW,kBAEbC,QAAM,EAAAhB,SAENF,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCC,cAAA,MAAAD,SAAI,gBACJF,eAAA,QAAMmB,SAAUV,EAAM6B,mBAAmBpC,SAAA,CACvCC,cAAA,SACEkB,KAAK,OACLC,KAAK,eACLC,YAAY,iBACZC,SAAUf,EAAM8B,wBAChBb,MAAOjB,EAAM+B,iBACbZ,UAAQ,IAEVzB,cAAA,UAAQkB,KAAK,SAAShB,QAASI,EAAM4B,yBAAyBnC,SAAC,wBCP1DuC,MAlBD7C,IAAoB,IAAnB,UAAE8C,GAAW9C,EAC1B,OACEO,cAAA,QAAMF,UAAU,QAAOC,SACpBwC,EAAUC,IAAI,CAACC,EAASC,IAErB1C,cAAA,OAAKF,UAAU,OAAMC,SACnBF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAK0C,EAAQE,gBACb3C,cAAA,MAAAD,SAAK0C,EAAQG,eACb5C,cAAA,KAAAD,SAAI0C,EAAQI,sBAJWH,OCyHtBI,MAvHf,WAGE,MAAOC,EAAeC,GAAoBC,oBAAS,IAY5CC,EAAiBC,GAAsBF,oBAAS,IAYhDN,EAAeS,GAAoBH,mBAAS,KAM5CL,EAAcS,GAAmBJ,mBAAS,KAQ1CJ,EAAiBS,GAAsBL,mBAAS,KAQhDM,EAAOC,GAAYP,mBAAS,KAkB5BQ,EAAiBC,GAAsBT,mBAAS,IAevD,OACEpD,eAAC8D,WAAQ,CAAA5D,SAAA,CACPC,cAACR,EACC,CACAE,sBAjFgBkE,KACpBZ,GAAiB,IAiFbpD,wBAtEkBiE,KACtBV,GAAmB,IAsEfxD,sBA3BmBmE,KACvBN,EAAS,OA4BPxD,cAACK,EACC,CACAI,uBAAwBsC,EACxBpC,uBApFiBoD,KACrBf,GAAiB,IAqFb1B,sBAlEuB0C,IAC3BZ,EAAiBY,EAAEC,OAAO1C,QAkEtBG,qBA7DsBsC,IAC1BX,EAAgBW,EAAEC,OAAO1C,QA6DrBO,wBAtDyBkC,IAC7BV,EAAmBU,EAAEC,OAAO1C,QAuDxBC,mBAAoBmB,EACpBhB,kBAAmBiB,EACnBb,qBAAsBc,EAEtB5B,uBApDwB+C,IAC5BA,EAAEE,iBACFV,EAAS,IAAID,EAAO,CAAEZ,gBAAeC,eAAcC,qBACnDO,EAAiB,IACjBC,EAAgB,IAChBC,EAAmB,OAiDjBtD,cAACgC,EACC,CACAC,yBAA0BiB,EAC1BhB,yBAvFmBiC,KACvBhB,GAAmB,IAwFfhB,mBArCwB6B,IAC5BA,EAAEE,iBACF,MAAME,EAAgBb,EAAMc,OAAQC,GAC3BA,EAAI3B,cAAc4B,SAASd,IAEpCD,EAASY,GACTI,QAAQC,IAAIL,IAgCR/B,iBAAkBoB,EAClBrB,wBA3C4B4B,IAChCN,EAAmBM,EAAEC,OAAO1C,UA4C1BvB,cAACsC,EAAK,CAACC,UAAWgB,MAGxB,EChHemB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKpF,IAAkD,IAAjD,OAAEqF,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASzF,EACpEqF,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCFdQ,IAASC,OAAOpF,cAAC8C,EAAG,IAAKuC,SAASC,eAAe,SAKjDZ,G","file":"static/js/main.57e251cb.chunk.js","sourcesContent":["import { FaPlus, FaSearch, FaSyncAlt } from \"react-icons/fa\";\n\nconst NavBar = ({\n  showFormModalFunction,\n  noteClearanceFunction,\n  showSearchModalFunction,\n}) => {\n  return (\n    <nav className=\"NavBar\">\n      <h1>NOTELY</h1>\n      <div className=\"actions\">\n        <FaPlus className=\"action-icon\" onClick={showFormModalFunction} />\n        <FaSearch className=\"action-icon\" onClick={showSearchModalFunction} />\n        <FaSyncAlt className=\"action-icon\" onClick={noteClearanceFunction} />\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nconst FormModal = (props) => {\n  return (\n    <Modal\n      open={props.noteModalShowStatement}\n      onClose={props.closeFormModalFunction}\n      classNames={{\n        modal: \"react_responsive_modal_1\",\n        closeIcon: \"form_close_btn\",\n      }}\n      center\n    >\n      <div className=\"form_modal\">\n        <h1>Create Your Note</h1>\n        <form onSubmit={props.noteSubmissionFunction}>\n          <input\n            type=\"text\"\n            name=\"noteMainTitle\"\n            placeholder=\"Note Main Title\"\n            onChange={props.noteMainTitleFunction}\n            value={props.noteMainTitleValue}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"noteSubTitle\"\n            placeholder=\"Note Sub Title\"\n            onChange={props.noteSubTitleFunction}\n            value={props.noteSubTitleValue}\n            required\n          />\n          <textarea\n            name=\"noteDescription\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Note Description\"\n            onChange={props.noteDescriptionFunction}\n            value={props.noteDescriptionValue}\n            required\n          />\n          <button type=\"submit\" onClick={props.closeFormModalFunction}>\n            Create Note\n          </button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FormModal;\n","import \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nconst SearchModal = (props) => {\n  return (\n    <Modal\n      open={props.searchModalShowStatement}\n      onClose={props.closeSearchModalFunction}\n      classNames={{\n        modal: \"react_responsive_modal_1 react_responsive_modal_2\",\n        closeIcon: \"form_close_btn\",\n      }}\n      center\n    >\n      <div className=\"form_modal search_modal\">\n        <h1>Search Note</h1>\n        <form onSubmit={props.noteSearchFunction}>\n          <input\n            type=\"text\"\n            name=\"search-input\"\n            placeholder=\"Search By name\"\n            onChange={props.noteSearchQueryFunction}\n            value={props.searchQueryValue}\n            required\n          />\n          <button type=\"submit\" onClick={props.closeSearchModalFunction}>\n            Search Note\n          </button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SearchModal;\n","const Board = ({ notesData }) => {\n  return (\n    <main className=\"Board\">\n      {notesData.map((noteObj, noteIndex) => {\n        return (\n          <div className=\"note\" key={noteIndex}>\n            <div className=\"note-text\">\n              <h1>{noteObj.noteMainTitle}</h1>\n              <h3>{noteObj.noteSubTitle}</h3>\n              <p>{noteObj.noteDescription}</p>\n            </div>\n          </div>\n        );\n      })}\n    </main>\n  );\n};\n\nexport default Board;\n","import { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FormModal from \"./components/formModal\";\nimport SearchModal from \"./components/searchModal\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  // show and hide implementations on form modal\n\n  const [showFormModal, setShowFormModal] = useState(false);\n\n  const openFormModal = () => {\n    setShowFormModal(true);\n  };\n\n  const closeFormModal = () => {\n    setShowFormModal(false);\n  };\n\n  // show and hide implementation on search modal\n\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const openSearchModal = () => {\n    setShowSearchModal(true);\n  };\n\n  const closeSearchModal = () => {\n    setShowSearchModal(false);\n  };\n\n  // got the main and sub title of the note\n\n  const [noteMainTitle, setNoteMainTitle] = useState(\"\");\n\n  const handleNoteMainTitle = (e) => {\n    setNoteMainTitle(e.target.value);\n  };\n\n  const [noteSubTitle, setNoteSubTitle] = useState(\"\");\n\n  const handleNoteSubTitle = (e) => {\n    setNoteSubTitle(e.target.value);\n  };\n\n  // got the description of the note\n\n  const [noteDescription, setNoteDescription] = useState(\"\");\n\n  const handleNoteDescription = (e) => {\n    setNoteDescription(e.target.value);\n  };\n\n  // submission of the note\n\n  const [notes, setNotes] = useState([]);\n\n  const handleNoteSubmission = (e) => {\n    e.preventDefault();\n    setNotes([...notes, { noteMainTitle, noteSubTitle, noteDescription }]);\n    setNoteMainTitle(\"\");\n    setNoteSubTitle(\"\");\n    setNoteDescription(\"\");\n  };\n\n  // clear all the notes\n\n  const handleClearNotes = () => {\n    setNotes(\"\");\n  };\n\n  // searching the notes\n\n  const [searchNoteQuery, setSearchNoteQuery] = useState(\"\");\n\n  const handleNoteSearchFunction = (e) => {\n    setSearchNoteQuery(e.target.value);\n  };\n\n  const handleSearchFunction = (e) => {\n    e.preventDefault();\n    const searchedNotes = notes.filter((obj) => {\n      return obj.noteMainTitle.includes(searchNoteQuery);\n    });\n    setNotes(searchedNotes);\n    console.log(searchedNotes);\n  };\n\n  return (\n    <Fragment>\n      <NavBar\n        // open modals functions props\n        showFormModalFunction={openFormModal}\n        showSearchModalFunction={openSearchModal}\n        noteClearanceFunction={handleClearNotes}\n      />\n      <FormModal\n        // modal props\n        noteModalShowStatement={showFormModal}\n        closeFormModalFunction={closeFormModal}\n        // input function props\n        noteMainTitleFunction={handleNoteMainTitle}\n        noteSubTitleFunction={handleNoteSubTitle}\n        noteDescriptionFunction={handleNoteDescription}\n        // input value props\n        noteMainTitleValue={noteMainTitle}\n        noteSubTitleValue={noteSubTitle}\n        noteDescriptionValue={noteDescription}\n        // note submission prop\n        noteSubmissionFunction={handleNoteSubmission}\n      />\n      <SearchModal\n        // modal props\n        searchModalShowStatement={showSearchModal}\n        closeSearchModalFunction={closeSearchModal}\n        // note search props\n        noteSearchFunction={handleSearchFunction}\n        searchQueryValue={searchNoteQuery}\n        noteSearchQueryFunction={handleNoteSearchFunction}\n      />\n      <Board notesData={notes} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}